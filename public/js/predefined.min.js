const APPID = "81544da8c886fef418a2f7fe5853ef78";

function convertTimestamp(timestamp) {
	const date = new Date(timestamp * 1000).toLocaleTimeString();
	return date;
}

function getWeatherData(lat, lon, exclude = null) {
	$.ajax({
		url: `https://api.openweathermap.org/data/3.0/onecall`,
		type: 'GET',
		dataType: 'JSON',
		data: {
			lat: lat,
			lon: lon,
			exclude: exclude,
			appid: '81544da8c886fef418a2f7fe5853ef78',
		},
		beforeSend: () => {
	        $('btnFetchWeather').html('Fetching<div class="spinner-border spinner-border-sm ms-2" role="status"><span class="visually-hidden">Loading...</span></div>');
	        $('btnFetchWeather').attr('disabled', true);
		},
		success: (response) => {
			console.log(response);

			const currentWeather = response.current;
			const sunriseTime = new Date(currentWeather.sunrise * 1000);
			const sunsetTime = new Date(currentWeather.sunset * 1000);

			const dailyWeather = response.daily;

			const hourlyWeather = response.hourly;

            $('#navCurrent').empty();

            const currentForecast = `<div class="card animated flex-fill"><div class="card-body"><div class="d-flex w-100 justify-content-between align-items-center"><span>
            Date:${new Date(currentWeather.dt * 1000).toLocaleDateString()}<br>
            Weather:${currentWeather.weather[0].main}<br>
            Temperature:${currentWeather.temp}°C<br>
            Humidity:${currentWeather.humidity}<br>
            Pressure:${currentWeather.pressure}<br>
            Sunrise:${convertTimestamp(currentWeather.sunrise)}<br>
            Sunset:${convertTimestamp(currentWeather.sunset)}</span>
            </div></div></div>`;
            $('#navCurrent').html(currentForecast);

            $('#navDaily').empty();

            $.each(response.daily, function(index, item) {
            	const dailyForecast = $(`<div class="card animated flex-fill"><div class="card-body"><div class="d-flex w-100 justify-content-between align-items-center"><span>
            Date:${new Date(item.dt * 1000).toLocaleDateString()}<br>
            Weather:${item.weather[0].main}<br>
            Temperature:<br><ul class="ps-2 mb-0"><li>Day:${item.temp.day}°C</li><li>Eve:${item.temp.eve}°C</li><li>Morn:${item.temp.day}°C</li><li>Night:${item.temp.night}°C</li></ul>
            Humidity:${item.humidity}<br>
            Pressure:${item.pressure}<br>
            Sunrise:${convertTimestamp(item.sunrise)}<br>
            Sunset:${convertTimestamp(item.sunset)}</span>
            </div></div></div>`);
	            $('#navDaily').append(dailyForecast);
            });

            $('#navHourly').empty();

            $.each(response.hourly, function(index, item) {
            	const dailyForecast = $(`<div class="card animated flex-fill"><div class="card-body"><div class="d-flex w-100 justify-content-between align-items-center"><span>
            Date:${new Date(item.dt * 1000).toLocaleString()}<br>
            Weather:${item.weather[0].main}<br>
            Temperature:${item.temp}°C<br>
            Humidity:${item.humidity}<br>
            Pressure:${item.pressure}</span>
            </div></div></div>`);
	            $('#navHourly').append(dailyForecast);
            });
		},
		complete: () => {
            $('#btnFetchWeather').html('Fetch<i class="bi bi-send ms-2"></i>');
            $('#btnFetchWeather').attr('disabled', false);
		},
		error: (data, text, ex) => {
			console.error(ex);
		}
	});
}

function getLocationName(lat, lon, limit = 1) {
	$.ajax({
		url: `http://api.openweathermap.org/geo/1.0/reverse`,
		type: 'GET',
		dataType: 'JSON',
		data: {
			lat: lat,
			lon: lon,
			limit: limit,
			appid: '81544da8c886fef418a2f7fe5853ef78',
		},
		success: (response) => {
			$('#location').val(response[0].name);
		},
		error: (data, text, ex) => {
			console.error(ex);
		}
	});
}

function getVisitor() {
	const names = [
		'Austin', 'Caesar',
		'Emily', 'Lucia', 'Eva',
		'Linda', 'Felix',
		'Diego', 'Georgia'
	];

	Swal.fire({
		icon: 'question',
		iconColor: 'rgba(112, 102, 224, 1)',
		title: 'Your name',
		input: 'text',
		inputPlaceholder: names[Math.floor(Math.random() * names.length)],
		inputValidator: (value) => {
			return new Promise((resolve) => {
				if (value != '') { resolve(); }
				else { resolve('Do not leave me blank'); }
			});
		},
		confirmButtonText: 'Submit',
		allowOutsideClick: false,
		allowEscapeKey: false,
		backdrop: 'rgba(58, 52, 124, .96)',
	}).then((result) => {
		Swal.fire({
			title: 'Submitted',
			icon: 'success',
			iconColor: 'rgba(112, 102, 224, 1)',
			text: 'Thank you for visiting!',
			backdrop: 'rgba(58, 52, 124, .96)'
		})
	});
}

$(document).ready(function() {
	$('#loader').fadeOut();

	if ("geolocation" in navigator) {

        navigator.geolocation.getCurrentPosition(function (position) {
            let lat = position.coords.latitude || 0;
            let lon = position.coords.longitude || 0;

            $('#lat').val(lat);
            $('#lon').val(lon);

			/* getWeatherData(lat, lon); */

	        }, function (error) {
	            console.error('Error:', error);
	        }, { enableHighAccuracy: true }
        );
    } else {
        Swal.fire('Warning', 'Location is currently unavailable.', 'warning');
        console.error('Geolocation is not supported.');
    }

    $('#btnFetchWeather').click(function(event) {
    	event.preventDefault();

    	let lat = $('#lat').val();
    	let lon = $('#lon').val();

		getLocationName(lat, lon);
		getWeatherData(lat, lon);
    });
});